config:
  prerequisites:
    - ../build-env/stacker.yaml

build-go-devel:
  from:
    type: built
    tag: build-env
  import:
    - ../../pkgmgr/defs.sh
  run: |
    export DISTRO=${{DISTRO}}
    export DISTRO_REL=${{DISTRO_REL}}
    export ARCH=${{ARCH}}
    export OS=${{OS}}
    # golang
    export GOLANG=${{GOLANG}}
    export GOLANG_DLV=${{GOLANG_DLV}}
    export GOLANG_LINTER=${{GOLANG_LINTER}}
    # source pkgmgr func defs
    . /stacker/defs.sh
    # prepare the rootfs
    dldir=$(mktemp -d ${TMPDIR:-/tmp}/XXXXXX)
    # install go
    wget -N https://go.dev/dl/go${GOLANG}.${OS}-${ARCH}.tar.gz -O $dldir/golang.tar.gz
    echo "${{GOLANG_HASH}}  $dldir/golang.tar.gz" > SHA256SUMS
    sha256sum -c SHA256SUMS
    tar xvzf $dldir/golang.tar.gz -C /opt/
    export GOROOT=/opt/go
    export PATH=$GOROOT/bin:$PATH
    mkdir -p /go
    export GOPATH=/go
    export PATH=$GOPATH/bin:$PATH
    export GOCACHE=/go/cache
    # build golangci-lint
    curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin ${GOLANG_LINTER}
    # build dlv debugger
    go install github.com/go-delve/delve/cmd/dlv@${GOLANG_DLV}
    # copy binaries under /opt/bin
    mkdir -p /rootfs_diff/opt/bin
    tar xvzf $dldir/golang.tar.gz -C /rootfs_diff/opt/
    cp $GOPATH/bin/golangci-lint /rootfs_diff/opt/go/bin/
    cp $GOPATH/bin/dlv /rootfs_diff/opt/go/bin/
    # cleanup unnecessary files
    cleanup_rootfs /rootfs_diff
  build_only: true

go-devel-${{ARCH}}:
  from:
    type: oci
    url: ${{BUILD_OCI_DIR}}:base-devel-${{ARCH}}${{LAYER_SUFFIX}}
  import:
    - path: stacker://build-go-devel/rootfs_diff/
      dest: /
    - ../../pkgmgr/defs.sh # The import purpose is to force a rebuild if file changed
  run: |
    echo 'export HOME=/go' > /etc/profile
    echo 'export GOROOT=/opt/go' >> /etc/profile
    echo 'export PATH=$GOROOT/bin:$PATH' >> /etc/profile
    echo 'mkdir -p /tmp/go/cache'  >> /etc/profile
    echo 'export GOCACHE=/tmp/go/cache' >> /etc/profile
  full_command: "/bin/sh -l"
  annotations:
    org.opencontainers.image.title: go-devel-${{ARCH}}
    org.opencontainers.image.description: ${{DESCRIPTION}}
    org.opencontainers.image.url: https://github.com/project-stacker/c3
    org.opencontainers.image.source: https://github.com/project-stacker/c3
    org.opencontainers.image.version: ${{GOLANG}}
    org.opencontainers.image.revision: ${{REVISION}}
    org.opencontainers.image.licenses: ${{LICENSES}}
    org.opencontainers.image.vendor: Cisco Systems, Inc.

test-go-devel:
  from:
    type: built
    tag: go-devel-${{ARCH}}
  import:
    - ../test/test.go
  run: |
    # go toolchain env
    . /etc/profile
    # go src env
    mkdir -p /go
    export GOPATH=/go
    export PATH=$GOPATH/bin:$PATH
    # go environment
    go version
    go env
    mkdir -p $GOPATH/src
    cd $GOPATH/src
    cp /stacker/test.go .
    # test compiler
    go build -v -o test.static test.go
    go build -v -buildmode=pie -o test.dynamic test.go
    # test output binary
    ./test.static
    ./test.dynamic
    # test linter
    golangci-lint version
    golangci-lint -v run test.go
    # test debugger
    dlv version
    dlv --allow-non-terminal-interactive exec ./test.static
    dlv --allow-non-terminal-interactive exec ./test.dynamic
  build_only: true

run-go-devel:
  from:
    type: built
    tag: build-env
  import:
    - stacker://test-go-devel/go/src/test.static
    - stacker://test-go-devel/go/src/test.dynamic
  run: |
    /stacker/test.static
    /stacker/test.dynamic
  build_only: true
